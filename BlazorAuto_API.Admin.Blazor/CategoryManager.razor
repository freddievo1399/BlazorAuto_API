@page "/admin/categorie"
@inject IExecuteService<ICategoriesManagerService> CategoriesService;
<PageHeaderContent>
	<PageHeader PageTitle="Quản lý Danh mục" RefeshEvent=@(async ()=>await grid.Refresh()) AddEvent="OpenDialogAddCategori"></PageHeader>
</PageHeaderContent>
<SfButton OnClick="@(() => Swal.Success("Success"))">Success</SfButton>
<SfButton OnClick="@(() => Swal.Error("Error"))">Error</SfButton>
<SfButton OnClick="@(() => Swal.Warning("Warning"))">Warning</SfButton>
<SfButton OnClick="@(() => Swal.Confirm("Confirm"))">Confirm</SfButton>
<SfButton OnClick="@(() => Swal.Loading())">Loading</SfButton>
<SfDialog @ref=DialogAddCategori Width="250px" Visible=false AllowDragging="true" ShowCloseIcon="true">
	<DialogTemplates>
		<Header> Tạo Danh mục hàng </Header>
		<Content>
			<EditForm id="formsubmit" Model=categoriesCreateModel OnValidSubmit="OnValidSubmit">
				<DataAnnotationsValidator />
				<SfTextBox @bind-Value="categoriesCreateModel.Name" Placeholder="Tên" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
				<SfTextBox @bind-Value="categoriesCreateModel.Description" Placeholder="Mô tả" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
			</EditForm>
		</Content>
	</DialogTemplates>
	<DialogButtons>
		<SfButton HtmlAttributes="@(new Dictionary<string, object> { { "type", "submit" },{"form","formsubmit"} })">OK</SfButton>
		<DialogButton Content="Cancel" OnClick=@(()=>DialogAddCategori.HideAsync()) />
	</DialogButtons>
</SfDialog>

<SfGrid @ref=grid TValue="CategoriesInfoModel">
	<SfDataManager Adaptor="Adaptors.CustomAdaptor">
		<CustomAdaptorGridBlazor GetDataMethod="GetData"></CustomAdaptorGridBlazor>
	</SfDataManager>
	<GridColumns>
		<GridColumn Field="@(nameof(CategoriesInfoModel.Name))"></GridColumn>
		<GridColumn Field="@(nameof(CategoriesInfoModel.Description))"></GridColumn>
	</GridColumns>
</SfGrid>
@code {
	CategoriesCreateModel categoriesCreateModel = null;
	SfDialog DialogAddCategori;
	ICategoriesManagerService service => CategoriesService.GetService();
	private SfGrid<CategoriesInfoModel> grid;

	private async Task<PagedResultsOf<CategoriesInfoModel>> GetData(DataManagerRequest request)
	{
		var rsp = await service.GetData(request);
		return rsp;
	}
	private async Task OpenDialogAddCategori()
	{
		categoriesCreateModel = new();
		await DialogAddCategori.ShowAsync();
	}
	private async Task OnValidSubmit()
	{
		await Swal.Loading("Vui lòng đợi");
		var rsp = await service.Add(categoriesCreateModel);
		if (rsp.Success)
		{
			await Swal.Close();
			await DialogAddCategori.HideAsync();
			await grid.Refresh();
		}
		else
		{
			await Swal.Warning(rsp.Message);
		}
	}
}
