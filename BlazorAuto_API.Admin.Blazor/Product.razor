@page "/admin/product/{Guid:guid}"
@inject NavigationManager NavigationManager
@inject SwalService Swal
@using Syncfusion.Blazor.RichTextEditor
@inject IExecuteService<IProductDetailService> ProductService;
<PageHeader PageTitle="Cấu hình sản phẩm"></PageHeader>
@if (!IsLoaded)
{

}
else if (ProductModel == null)
{
	<div>Không tìm thấy</div>
}
else
{
	<EditForm id="formsubmit" Model=ProductModel OnValidSubmit="OnValidSubmit">
		<DataAnnotationsValidator />
		<SfTextBox @bind-Value="ProductModel.Name" Placeholder="Tên" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
		<SfTextBox @bind-Value="ProductModel.Description" Placeholder="Mô tả" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>

        <SfRichTextEditor EnableAutoUrl @ref="sfRichTextEditor" @bind-Value="ProductModel.RichDescription">
			<RichTextEditorToolbarSettings Type="ToolbarType.MultiRow" Items="Items"/>
			<RichTextEditorImageSettings Display="ImageDisplay.Break" ResizeByPercent>

			</RichTextEditorImageSettings>
		</SfRichTextEditor>




		<SfButton HtmlAttributes="@(new Dictionary<string, object> { { "type", "submit" },{"form","formsubmit"} })">OK</SfButton>
	</EditForm>
}

@code {
	[Parameter]
	public Guid Guid { get; set; }

	SfRichTextEditor sfRichTextEditor;
    private List<ToolbarItemModel> Items = new List<ToolbarItemModel>()
{
    // --- Nhóm: Định dạng văn bản cơ bản ---
    new ToolbarItemModel() { Command = ToolbarCommand.Bold },
    new ToolbarItemModel() { Command = ToolbarCommand.Italic },
    new ToolbarItemModel() { Command = ToolbarCommand.Underline },
    new ToolbarItemModel() { Command = ToolbarCommand.StrikeThrough },
    new ToolbarItemModel() { Command = ToolbarCommand.InlineCode },
    new ToolbarItemModel() { Command = ToolbarCommand.SuperScript },
    new ToolbarItemModel() { Command = ToolbarCommand.SubScript },
    new ToolbarItemModel() { Command = ToolbarCommand.ClearFormat },
    new ToolbarItemModel() { Command = ToolbarCommand.Separator },

    // --- Nhóm: Font và màu sắc ---
    new ToolbarItemModel() { Command = ToolbarCommand.FontName },
    new ToolbarItemModel() { Command = ToolbarCommand.FontSize },
    new ToolbarItemModel() { Command = ToolbarCommand.FontColor },
    new ToolbarItemModel() { Command = ToolbarCommand.BackgroundColor },
    new ToolbarItemModel() { Command = ToolbarCommand.LowerCase },
    new ToolbarItemModel() { Command = ToolbarCommand.UpperCase },
    new ToolbarItemModel() { Command = ToolbarCommand.HorizontalSeparator },

    // --- Nhóm: Căn chỉnh và định dạng đoạn ---
    new ToolbarItemModel() { Command = ToolbarCommand.Formats },
    new ToolbarItemModel() { Command = ToolbarCommand.Alignments },
    new ToolbarItemModel() { Command = ToolbarCommand.Blockquote },
    new ToolbarItemModel() { Command = ToolbarCommand.OrderedList },
    new ToolbarItemModel() { Command = ToolbarCommand.UnorderedList },
    new ToolbarItemModel() { Command = ToolbarCommand.NumberFormatList },
    new ToolbarItemModel() { Command = ToolbarCommand.BulletFormatList },
    new ToolbarItemModel() { Command = ToolbarCommand.Indent },
    new ToolbarItemModel() { Command = ToolbarCommand.Outdent },
    new ToolbarItemModel() { Command = ToolbarCommand.Separator },

    // --- Nhóm: Chèn nội dung ---
    new ToolbarItemModel() { Command = ToolbarCommand.CreateLink },
    new ToolbarItemModel() { Command = ToolbarCommand.RemoveLink },
    new ToolbarItemModel() { Command = ToolbarCommand.Image },
    // new ToolbarItemModel() { Command = ToolbarCommand.Audio },
    new ToolbarItemModel() { Command = ToolbarCommand.Video },
    new ToolbarItemModel() { Command = ToolbarCommand.CreateTable },
    // new ToolbarItemModel() { Command = ToolbarCommand.InsertCode },
    new ToolbarItemModel() { Command = ToolbarCommand.HorizontalSeparator },

    // --- Nhóm: Tài liệu ---
    new ToolbarItemModel() { Command = ToolbarCommand.ImportWord },
    new ToolbarItemModel() { Command = ToolbarCommand.ExportWord },
    new ToolbarItemModel() { Command = ToolbarCommand.ExportPdf },
    new ToolbarItemModel() { Command = ToolbarCommand.Print },
    new ToolbarItemModel() { Command = ToolbarCommand.Separator },

    // --- Nhóm: Điều hướng và thao tác ---
    new ToolbarItemModel() { Command = ToolbarCommand.Undo },
    new ToolbarItemModel() { Command = ToolbarCommand.Redo },
    new ToolbarItemModel() { Command = ToolbarCommand.SourceCode },
    new ToolbarItemModel() { Command = ToolbarCommand.FullScreen },
    new ToolbarItemModel() { Command = ToolbarCommand.Maximize },
    new ToolbarItemModel() { Command = ToolbarCommand.Minimize },
};
	public ProductDetailModel? ProductModel { get; set; }
	bool IsLoaded = false;
	IProductDetailService service => ProductService.GetService();
	override protected async Task OnInitializedAsync()
	{
		var rlt = await service.FindByGuid(Guid);
		if (rlt.Success)
		{
			ProductModel = rlt.Item;
			IsLoaded = true;
		}
	}
	private async Task OnValidSubmit()
	{
		// await Swal.Loading("Vui lòng đợi");
		// var rsp = await ProductService.Excute(x => x.Add(ProductModel));
		// if (rsp.Success)
		// {
		// 	await Swal.Close();
		// }
		// else
		// {
		// 	await Swal.Warning(rsp.Message);
		// }
	}
}

